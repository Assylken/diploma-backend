// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  username       String     @unique
  createdAt      DateTime   @default(now())
  udpateAt       DateTime   @updatedAt
  email          String     @unique
  hash           String
  firstName      String?
  lastName       String?
  country        Country    @relation(fields: [countryId], references: [id])
  countryId      Int
  profileImage   String?
  wallet_address String?
  monetization   Boolean?
  subscription   Boolean?
  bio            String?
  isArtist       Boolean
  Song           Song[]
  Playlist       Playlist[]

  @@map("users")
}

model Playlist {
  id                   Int              @id @default(autoincrement())
  playlist_name        String
  playlist_description String?
  playlist_avatar      String?
  plays                Int?
  createdAt            DateTime         @default(now())
  updateAt             DateTime         @updatedAt
  user                 User             @relation(fields: [userId], references: [id])
  userId               Int
  isPrivate            Boolean
  PlaylistOnSong       PlaylistOnSong[]
}

model PlaylistOnSong {
  id         Int      @default(autoincrement())
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId Int
  song       Song     @relation(fields: [songId], references: [id])
  songId     Int
  assignedAt DateTime @default(now())

  @@id([playlistId, songId])
}

model Song {
  id             Int              @id @default(autoincrement())
  name           String
  song_cid       String
  image_cid      String
  plays          Int?
  currentPlays   Int?
  level          Int?
  genre          Genre            @relation(fields: [genreId], references: [id])
  genreId        Int
  createdAt      DateTime         @default(now())
  updateAt       DateTime         @updatedAt
  user           User             @relation(fields: [userId], references: [id])
  userId         Int
  PlaylistOnSong PlaylistOnSong[]
}

model Country {
  id           Int    @id @default(autoincrement())
  country_name String
  User         User[]
}

model Genre {
  id         Int    @id @default(autoincrement())
  genre_name String

  Song Song[]
}
